{"version":3,"file":"static/js/991.7bcc2c9d.chunk.js","mappings":"gPACA,EAA4B,8BAA5B,EAAkE,0BAAlE,EAAyG,+BAAzG,EAAqJ,+BAArJ,EAAkM,gCAAlM,EAAyO,yB,SCOnOA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAEHG,QACC,oOACA,CACEC,QACE,2IAGLC,SACC,0IAEJC,MAAON,EAAAA,KAEJG,QAAQ,mDAAoD,CAC3DC,QACE,yEAEHC,SACC,wEAEJE,SAAUP,EAAAA,KAAaK,SAAS,0BAqDlC,EAlDmB,WACjB,IAEMG,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA0B,kCAC1B,SAAC,KAAD,CACEC,cAbe,CAAEN,MAAO,GAAIJ,KAAM,GAAIK,SAAU,IAchDM,iBAAkBd,EAClBe,SAXe,SAACC,EAAD,GAA6B,IAAjBC,EAAgB,EAAhBA,UAC/BR,GAASS,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAKG,UAKE,UAAC,KAAD,CAAMN,UAAWC,EAAmBO,aAAa,MAAjD,WACE,mBAAOR,UAAWC,EAAlB,UAAqC,QAEnC,SAAC,KAAD,CAAOQ,YAAY,OAAOC,KAAK,OAAOlB,KAAK,UAC3C,SAAC,KAAD,CAAcA,KAAK,OAAOmB,UAAU,YAEtC,mBAAOX,UAAWC,EAAlB,UAAqC,SAEnC,SAAC,KAAD,CAAOQ,YAAY,QAAQC,KAAK,QAAQlB,KAAK,WAC7C,SAAC,KAAD,CAAcA,KAAK,QAAQmB,UAAU,YAEvC,mBAAOX,UAAWC,EAAlB,UAAqC,YAEnC,SAAC,KAAD,CAAOQ,YAAY,WAAWC,KAAK,WAAWlB,KAAK,cACnD,SAAC,KAAD,CAAcA,KAAK,WAAWmB,UAAU,YAG1C,oBAAQX,UAAWC,EAAoBS,KAAK,SAA5C,WACE,qBACA,qBACA,qBACA,oBAAa,gBAEf,SAAC,KAAD,CAAME,GAAG,SAASZ,UAAWC,EAA7B,SAAuC,4CAOhD,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/SignUpPage/SignUpPage.module.css?2000","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SignUpPage_container__A1kU5\",\"title\":\"SignUpPage_title__EUI-m\",\"input-form\":\"SignUpPage_input-form__ep78g\",\"input-item\":\"SignUpPage_input-item__t1kan\",\"button-form\":\"SignUpPage_button-form__Pi3pH\",\"link\":\"SignUpPage_link__cZANe\"};","import { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { register } from 'redux/auth/auth-operation';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport css from './SignUpPage.module.css';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Zа-яА-ЯіІєЄїЇ]+(([' -][a-zA-Zа-яА-ЯіІєЄїЇ])?[a-zA-Zа-яА-ЯіІєЄїЇ]*)*$/,\n      {\n        message:\n          \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Dick Thunder, Charles de Batz de Castelmore d'Artagnan\",\n      }\n    )\n    .required(\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  email: yup\n    .string()\n    .matches(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/, {\n      message:\n        'Please enter a valid email address, for example, example@example.com',\n    })\n    .required(\n      'Please enter a valid email address, for example, example@example.com'\n    ),\n  password: yup.string().required('Password is required'),\n});\n\nconst SignUpPage = () => {\n  const initialValue = { email: '', name: '', password: '' };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (newUser, { resetForm }) => {\n    dispatch(register(newUser));\n    resetForm();\n  };\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}>Register to continue, please</h2>\n      <Formik\n        initialValues={initialValue}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css['input-form']} autoComplete=\"off\">\n          <label className={css['input-item']}>\n            Name\n            <Field placeholder=\"Name\" type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </label>\n          <label className={css['input-item']}>\n            Email\n            <Field placeholder=\"Email\" type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </label>\n          <label className={css['input-item']}>\n            Password\n            <Field placeholder=\"Password\" type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component=\"div\" />\n          </label>\n\n          <button className={css['button-form']} type=\"submit\">\n            <span></span>\n            <span></span>\n            <span></span>\n            <span></span> REGISTER\n          </button>\n          <Link to=\"/logIn\" className={css.link}>\n            Already have an account? Sign in\n          </Link>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["schema","yup","shape","name","matches","message","required","email","password","dispatch","useDispatch","className","css","initialValues","validationSchema","onSubmit","newUser","resetForm","register","autoComplete","placeholder","type","component","to"],"sourceRoot":""}