{"version":3,"file":"static/js/622.443e461a.chunk.js","mappings":"yMAMMA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAEHG,QACC,oOACA,CACEC,QACE,2IAGLC,SACC,0IAcJC,SAAUN,EAAAA,KAAaK,SAAS,0BA8ClC,UA3CmB,WACjB,IAEME,GAAWC,EAAAA,EAAAA,MAQjB,OACE,iCACE,wBAAI,kCACJ,SAAC,KAAD,CACEC,cAde,CAAEC,MAAO,GAAIR,KAAM,GAAII,SAAU,IAehDK,iBAAkBZ,EAClBa,SAZe,SAACC,EAAD,GAA6B,IAAjBC,EAAgB,EAAhBA,UAC/BC,QAAQC,IAAI,WAAYH,GACxBN,GAASU,EAAAA,EAAAA,IAASJ,IAClBC,GACD,EAKG,UAKE,UAAC,KAAD,CAAMI,aAAa,MAAnB,WACE,6BAAO,QAEL,SAAC,KAAD,CAAOC,YAAY,OAAOC,KAAK,OAAOlB,KAAK,UAC3C,SAAC,KAAD,CAAcA,KAAK,OAAOmB,UAAU,YAEtC,6BAAO,SAEL,SAAC,KAAD,CAAOF,YAAY,QAAQC,KAAK,QAAQlB,KAAK,WAC7C,SAAC,KAAD,CAAcA,KAAK,QAAQmB,UAAU,YAEvC,6BAAO,YAEL,SAAC,KAAD,CAAOF,YAAY,WAAWC,KAAK,WAAWlB,KAAK,cACnD,SAAC,KAAD,CAAcA,KAAK,WAAWmB,UAAU,YAG1C,mBAAQD,KAAK,SAAb,SAAsB,mBAK/B,C","sources":["pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operation';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\n// import css from './Register.module.css';\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Zа-яА-ЯіІєЄїЇ]+(([' -][a-zA-Zа-яА-ЯіІєЄїЇ])?[a-zA-Zа-яА-ЯіІєЄїЇ]*)*$/,\n      {\n        message:\n          \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Dick Thunder, Charles de Batz de Castelmore d'Artagnan\",\n      }\n    )\n    .required(\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  // number: yup\n  //   .string()\n  //   .matches(\n  //     /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n  //     {\n  //       message:\n  //         'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n  //     }\n  //   )\n  //   .required(\n  //     'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n  //   ),\n  password: yup.string().required('Password is required'),\n});\n\nconst SignUpPage = () => {\n  const initialValue = { email: '', name: '', password: '' };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (newUser, { resetForm }) => {\n    console.log('newUser:', newUser);\n    dispatch(register(newUser));\n    resetForm();\n  };\n\n  return (\n    <>\n      <h2>Register to continue, please</h2>\n      <Formik\n        initialValues={initialValue}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <label>\n            Name\n            <Field placeholder=\"Name\" type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"div\" />\n          </label>\n          <label>\n            Email\n            <Field placeholder=\"Email\" type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </label>\n          <label>\n            Password\n            <Field placeholder=\"Password\" type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component=\"div\" />\n          </label>\n\n          <button type=\"submit\">Sign Up</button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["schema","yup","shape","name","matches","message","required","password","dispatch","useDispatch","initialValues","email","validationSchema","onSubmit","newUser","resetForm","console","log","register","autoComplete","placeholder","type","component"],"sourceRoot":""}